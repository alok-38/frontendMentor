@import url(preset.css);

/* Apply a global box-sizing reset */
html {
    box-sizing: border-box;
}

/* RESET EXAMPLE */
*,
*::before,
*::after {
    box-sizing: inherit;
    margin: 0;
    padding: 0;
}

body {
    background-color: var(--grey-950);
    font-family: var(--font-jetbrains);
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.container {
    max-width: 540px;
    width: 100%;
    margin-inline: auto;
}

h1 {
    margin-bottom: 32px;
    color: var(--grey-600);
    font-size: var(--text-2-size);
    line-height: var(--text-2-line-height);
    text-align: center;
}

.display {
    position: relative;
    width: 100%;
    padding: 16px 32px;
    max-width: 540px;
    height: 80px;
    background-color: var(--grey-800);
    margin-bottom: 24px;
}

.display input {
    width: 100%;
    height: 42px;
    outline: unset;
    border: unset;
    background: transparent;
    display: flex;
    align-items: center;
    color: var(--grey-700);
    font-size: var(--text-1-size);
    line-height: var(--text-1-line-height);
}

.copy-icon {
    width: 21px;
    height: 24px;
    object-fit: cover;
    cursor: pointer;
    position: absolute;
    top: 50%;
    right: 30px;
    transform: translateY(-50%);
    transition: filter 0.3s ease, transform 0.3s ease;
}

/* Hover effect on the icon */
.copy-icon:hover {
    filter: brightness(1.2);
    transform: translateY(-50%) scale(1.1);
}

/* Focus effect when input is focused */
.display input:focus+.copy-icon {
    filter: brightness(1.3);
    transform: translateY(-50%) scale(1.15);
}

section:last-of-type {
    padding: 24px 32px;
    background-color: var(--grey-800);
    max-width: 540px;
    width: 100%;
}

.password-length div {
    max-width: 476px;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 16px;
}

input[type="range"] {
    max-width: 476px;
    width: 100%;
    background: transparent;
    cursor: pointer;
    -webkit-appearance: none;
    appearance: none;
}

/* Webkit (Chrome, Safari) */
input[type="range"]::-webkit-slider-runnable-track {
    border-radius: 5px;
    background: var(--grey-850);
    height: 8px;
    transition: box-shadow 0.3s ease;
}

/* Track glow when dragging */
input[type="range"].glow::-webkit-slider-runnable-track {
    box-shadow: 0 0 10px var(--green-200), 0 0 20px var(--green-200);
}

/* WebKit (Chrome, Safari, Edge) */
input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    height: 28px;
    width: 28px;
    border-radius: 50%;
    background-color: var(--green-200);
    margin-top: -10px;
    transition: box-shadow 0.3s ease;
    position: relative;
    z-index: 2;
}

input[type="range"]::-webkit-slider-thumb:hover {
    box-shadow:
        0 0 14px var(--green-200),
        0 0 28px var(--green-200);
    transition: box-shadow 0.2s ease;
}

/* Firefox */
input[type="range"]::-moz-range-track {
    height: 8px;
    background: var(--grey-850);
    border-radius: 5px;
    transition: box-shadow 0.3s ease;
}

input[type="range"].glow::-moz-range-track {
    box-shadow: 0 0 10px var(--green-200), 0 0 20px var(--green-200);
}

input[type="range"]::-moz-range-thumb {
    height: 28px;
    width: 28px;
    border-radius: 50%;
    background-color: var(--green-200);
    border: 2px solid #fff;
    cursor: pointer;
    box-shadow: 0 0 10px var(--green-200), 0 0 20px var(--green-200);
    transition: box-shadow 0.3s ease;
}

input[type="range"]::-moz-range-thumb:hover {
    box-shadow:
        0 0 14px var(--green-200),
        0 0 28px var(--green-200);
    transition: box-shadow 0.2s ease;
}

.password-length div p {
    display: flex;
    justify-content: space-between;
    max-width: 476px;
    width: 100%;
    align-items: center;
}

.password-length div p span {
    font-size: var(--text-1-size);
    line-height: var(--text-1-line-height);
    color: var(--green-200);
}

.password-length div>p {
    color: var(--grey-200);
    font-size: var(--text-3-size);
    line-height: var(--text-3-line-height);
}

.password-length div>div {
    color: var(--green-200);
    align-items: center;
    font-size: 24px;
}

.strength {
    display: flex;
    align-items: center;
    max-width: 476px;
    width: 100%;
    height: 72px;
    padding: 24px 32px;
    margin-inline: auto;
    background-color: var(--grey-850);
    margin: 32px 0;
}

#passwordStrength {
    background: transparent;
    outline: unset;
    border: unset;
    width: 413px;
    height: 28px;
    font-size: var(--text-3-size);
    line-height: var(--text-3-line-height);
    color: var(--grey-600);
    text-transform: uppercase;
    font-weight: bold;
    transition: color 0.3s ease;
}

.password-strength {
    width: 64px;
    height: 28px;
    gap: 8px;
    display: flex;
}

.password-strength div {
    width: 10px;
    height: 28px;
    border: 2px solid var(--grey-200);
    border-radius: 4px;
    transition: background-color 0.3s ease, transform 0.3s ease;
}

/* Active bars: green and slightly scale up */
.password-strength div.active {
    background-color: var(--green-200);
    transform: scaleY(1.3);
}

/* Parameters styling */

.parameters {
    margin: 32px 0 0 0;
    display: flex;
    flex-direction: column;
    gap: 16px;
}

.parameters div {
    display: flex;
    gap: 24px;
    align-items: center;
}

/* Hide native checkbox and rebuild it */
.parameters div input[type="checkbox"] {
    appearance: none;
    -webkit-appearance: none;
    width: 20px;
    height: 20px;
    border: 2px solid var(--grey-200);
    background-color: transparent;
    cursor: pointer;
    position: relative;
    border-radius: 4px;
    display: grid;
    place-items: center;
    transition: border-color 0.2s, background-color 0.2s;
}

/* Checkmark */
.parameters div input[type="checkbox"]::before {
    content: '';
    width: 10px;
    height: 5px;
    border: solid var(--grey-200);
    border-width: 0 0 2px 2px;
    transform: rotate(-45deg) scale(0);
    transform-origin: center;
    transition: transform 0.2s ease-in-out;
}

/* When checked, show the checkmark */
.parameters div input[type="checkbox"]:checked::before {
    transform: rotate(-45deg) scale(1);
}

/* Optional: Hover state */
.parameters div input[type="checkbox"]:hover {
    border-color: var(--grey-100);
}

.parameters div p {
    font-size: var(--text-3-size);
    line-height: var(--text-3-line-height);
    color: var(--grey-200);
}

button {
    outline: none;
    border: none;
    background-color: var(--green-200);
    color: var(--grey-800);
    max-width: 476px;
    width: 100%;
    height: 65px;
    font-size: var(--text-3-size);
    line-height: var(--text-3-line-height);
    padding: 24px 176px;
    cursor: pointer;
    text-transform: uppercase;
    display: flex;
    gap: 24px;
    align-items: center;
    font-weight: bold;
    transition: background-color 0.2s ease, transform 0.1s ease, box-shadow 0.2s ease, color 0.2s ease;
}

/* Hover state: transparent background, green border and text */
button:hover {
    background: transparent;
    border: 2px solid var(--green-200);
    color: var(--green-200);
}

/* Focus outline for accessibility */
button:focus-visible {
    box-shadow: 0 0 0 3px rgba(0, 255, 100, 0.4);
}

/* Pressed effect */
button:active {
    transform: translateY(2px);
}

/* Arrow movement - keep original colors, no filter */
button img {
    transition: transform 0.2s ease;
}

/* On hover/focus, move arrow */
button:hover img,
button:focus img {
    transform: translateX(4px);
}

@media screen and (max-width: 768) {
    .container {
        max-width: 540px;
        width: 100%;
        margin: auto;
    }
}

@media screen and (max-width: 375) {

    body {
        padding: 65px 16px;
    }

    .container {
        max-width: 343px;
        width: 100%;
        margin: auto;
    }

    .strength {
        width: 100%;
    }

    input,
    button {
        width: 100%;
    }

}